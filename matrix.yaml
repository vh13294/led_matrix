esphome:
  name: matrix
  on_boot:
    priority: -100
    then:
      - light.turn_on: led_matrix_light
      - script.execute: get_rate

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "XNY4jDnja2OrATjV8psJS7T8SK5blTcniFNKu9/Lg54="

ota:
  password: "1db409ae17974f562dcf471990015277"

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Matrix Fallback Hotspot"
    password: "z1qXxp8nlfOE"

captive_portal:

font:
  - file: monobit.ttf
    id: monobit
    size: 17
    glyphs: |
      0123456789$.,

image:
  - file: "riel.png"
    id: riel

text_sensor:
  - platform: template
    id: exchange_rate
    name: Exchange Rate

http_request:
  id: http_request_data
  timeout: 10s

script:
  - id: get_rate
    then:
      - http_request.get:
          url: https://open.er-api.com/v6/latest/USD
          verify_ssl: false
          on_response:
            then:
              - lambda: |-
                  json::parse_json(id(http_request_data).get_string(), [](JsonObject root) {
                      id(exchange_rate).publish_state(root["rates"]["KHR"]);
                  });

time:
  - platform: sntp
    on_time:
      - cron: "0 0 6 * * *"
        then:
          - light.turn_on: led_matrix_light
      - cron: "0 0 18 * * *"
        then:
          - light.turn_off: led_matrix_light
      - cron: "* /90 * * * *"
        then:
          - script.execute: get_rate

button:
  - platform: template
    name: Update Exchange Rate
    on_press:
      - script.execute: get_rate

light:
  - platform: fastled_clockless
    chipset: WS2812B
    pin: GPIO32
    num_leds: 256
    rgb_order: GRB
    name: "led_matrix"
    id: led_matrix_light
    color_correct: [50%, 50%, 50%]

# it.print(2, -5, id(monobit), "5567");
display:
  - platform: addressable_light
    id: led_matrix_display
    addressable_light_id: led_matrix_light
    width: 32
    height: 8
    pixel_mapper: |-
      if (y % 2 == 0) {
        return (y * 32) + x;
      }
      return (y * 32) + (31 - x);
    rotation: 180Â°
    update_interval: 16ms
    lambda: |-
      Color red = Color(0xFF0000);
      Color green = Color(0x00FF00);
      Color blue = Color(0x0000FF);
      it.printf(2, -5, id(monobit), "%4.0d",  atoi(id(exchange_rate).state.c_str()));
      it.image(24, 0, id(riel));
      it.line(0, 7, 11, 7, red);
      it.line(11, 7, 21, 7, blue);
